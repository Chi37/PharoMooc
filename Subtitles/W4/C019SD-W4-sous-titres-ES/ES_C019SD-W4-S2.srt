1
00:00:00,600 --> 00:00:04,800
Hola a todos.
Esta segunda secuencia sobre herencia

2
00:00:04,960 --> 00:00:08,480
te enseñará más
sobre herencia de comportamiento

3
00:00:08,640 --> 00:00:11,800
y que pasa cuando tu
enviar un mensaje a un objeto

4
00:00:12,440 --> 00:00:15,320
El objetivo de esta secuencia

5
00:00:15,480 --> 00:00:18,720
es entender
el algoritmo de envío de mensajes

6
00:00:19,720 --> 00:00:24,400
eso lo hace posible
para convertir un mensaje

7
00:00:24,560 --> 00:00:28,560
enviado por un receptor a un método.

8
00:00:28,720 --> 00:00:32,720
Es decir, qué método se ejecutará,
en relación con el mensaje enviado,

9
00:00:34,320 --> 00:00:37,640
y la semántica del "yo"
o lo que realmente significa yo.

10
00:00:38,800 --> 00:00:40,920
Como vimos en la secuencia 1,

11
00:00:41,400 --> 00:00:45,320
La herencia es estática, por estado.

12
00:00:45,480 --> 00:00:48,640
Es decir, cuando se define la subclase,

13
00:00:49,160 --> 00:00:51,240
su estado es conocido

14
00:00:51,400 --> 00:00:53,840
Pero la herencia del comportamiento es dinámica.

15
00:00:54,000 --> 00:00:56,040
Cuando el programa se está ejecutando,

16
00:00:56,400 --> 00:00:58,720
cuando envías un mensaje a un objeto

17
00:00:58,880 --> 00:01:02,000
buscas métodos
para clase y superclase.

18
00:01:02,400 --> 00:01:06,200
El envío de mensajes es un proceso de dos pasos.

19
00:01:06,920 --> 00:01:11,400
Primero, busca el método
que coincida con el mensaje.

20
00:01:11,760 --> 00:01:15,120
Paso dos, ejecuta el método
en el receptor

21
00:01:16,760 --> 00:01:19,680
Entonces, aquí tenemos la clase Rectangle,

22
00:01:20,280 --> 00:01:22,880
la clase ColoredRectangle,

23
00:01:23,920 --> 00:01:27,760
y una instancia de ColorRectangle
llamado aColoredRectangle,

24
00:01:28,280 --> 00:01:31,760
Enviamos el mensaje "área"
a este objeto

25
00:01:34,440 --> 00:01:40,200
Nuestro algoritmo de búsqueda busca un método
coincidiendo con el mensaje "área".

26
00:01:41,400 --> 00:01:43,680
Encuentra el método

27
00:01:44,160 --> 00:01:46,880
y lo lleva a cabo

28
00:01:47,880 --> 00:01:51,400
en relación al objeto
aColoredRectangle

29
00:01:52,600 --> 00:01:54,200
El algoritmo de búsqueda

30
00:01:54,640 --> 00:01:57,640
identifica el método a ejecutar

31
00:01:57,880 --> 00:02:00,000
cuando se envía un mensaje a un objeto.

32
00:02:00,320 --> 00:02:04,560
Hay claramente dos pasos:
envío de mensajes y ejecución de métodos.

33
00:02:04,720 --> 00:02:07,920
Son fundamentalmente diferentes,
en la programación de objetos.

34
00:02:08,640 --> 00:02:10,760
Incluso si usa otro idioma,

35
00:02:10,880 --> 00:02:15,000
es importante entender
la diferencia entre los dos.

36
00:02:15,320 --> 00:02:20,200
Si envía el mensaje de "área"
al objeto aColoredRectangle,

37
00:02:20,400 --> 00:02:23,160
Lo primero que el algoritmo de búsqueda
hará

38
00:02:23,320 --> 00:02:26,800
es buscar la clase del receptor.

39
00:02:27,440 --> 00:02:29,840
El receptor del mensaje "área"

40
00:02:30,000 --> 00:02:31,360
es un rectángulo multicolor.

41
00:02:31,520 --> 00:02:34,640
El algoritmo de búsqueda
comienza a buscar un método

42
00:02:34,800 --> 00:02:38,720
en la clase del objeto:
ColoredRectangle.

43
00:02:39,080 --> 00:02:41,840
Busca un método de "área"
en esa clase

44
00:02:42,160 --> 00:02:44,160
El algoritmo de búsqueda

45
00:02:44,320 --> 00:02:48,000
no encontrará el método "área"
en esa subclase

46
00:02:48,480 --> 00:02:51,200
Entonces se verá en otra parte.

47
00:02:51,640 --> 00:02:54,960
Se ve en la superclase Rectángulo.

48
00:02:55,640 --> 00:02:57,760
Encuentra el método "área" allí,

49
00:02:58,720 --> 00:02:59,920
y lo devuelve

50
00:03:00,080 --> 00:03:03,320
El algoritmo de búsqueda está hecho
cuando encuentra un método.

51
00:03:04,320 --> 00:03:09,320
Estudiemos dos casos y revise
el algoritmo que acabo de enumerar en ellos.

52
00:03:10,640 --> 00:03:13,200
Enviamos el mensaje "color"

53
00:03:13,360 --> 00:03:14,680
a aColorRectangle

54
00:03:14,840 --> 00:03:18,360
El algoritmo busca
la clase receptora

55
00:03:18,680 --> 00:03:20,920
para un método llamado color.

56
00:03:21,440 --> 00:03:23,840
Lo encuentra y lo devuelve.

57
00:03:25,160 --> 00:03:29,600
Si ahora enviamos el mensaje "área"
a aColoredRectangle,

58
00:03:30,320 --> 00:03:33,560
el algoritmo busca
la clase del receptor

59
00:03:33,720 --> 00:03:35,160
para el método "área".

60
00:03:35,320 --> 00:03:37,920
Al no encontrarlo, busca en la superclase.

61
00:03:38,160 --> 00:03:40,920
Lo encuentra y devuelve el método.

62
00:03:42,280 --> 00:03:45,520
"Ser" siempre representa al receptor.

63
00:03:45,960 --> 00:03:49,720
Los siguientes ejemplos
te lo dejará en claro

64
00:03:50,320 --> 00:03:54,560
que el algoritmo de búsqueda siempre
se aplica al receptor mismo.

65
00:03:54,960 --> 00:03:57,800
Aquí tenemos una instancia de clase A.

66
00:04:01,240 --> 00:04:02,920
Enviamos el mensaje "foo".

67
00:04:03,760 --> 00:04:06,120
El algoritmo de búsqueda busca foo,

68
00:04:06,360 --> 00:04:08,120
lo encuentra y lo ejecuta.

69
00:04:10,000 --> 00:04:12,680
Para B nuevo, comenzamos con aB,

70
00:04:13,000 --> 00:04:14,880
Lo mismo que B nuevo.

71
00:04:15,040 --> 00:04:16,960
Buscamos un método, "foo".

72
00:04:17,440 --> 00:04:19,360
El algoritmo de búsqueda lo encuentra,

73
00:04:20,200 --> 00:04:22,000
lo ejecuta y devuelve 50.

74
00:04:22,160 --> 00:04:23,440
Entonces, aquí tenemos 10,

75
00:04:24,520 --> 00:04:25,320
y 50

76
00:04:25,640 --> 00:04:30,200
Es importante que te tomes el tiempo
pensar en lo que significa "ser".

77
00:04:30,560 --> 00:04:33,040
Es importante describir dos puntos.

78
00:04:33,400 --> 00:04:35,120
¿Qué representa el "yo"?

79
00:04:36,280 --> 00:04:40,000
¿Cómo se comporta el envío de mensajes?

80
00:04:40,280 --> 00:04:42,640
¿Cuándo se envía un mensaje a "uno mismo"?

81
00:04:43,160 --> 00:04:47,160
"yo" y "esto"
"este" siendo el término en Java -

82
00:04:47,680 --> 00:04:48,880
son lo mismo

83
00:04:49,640 --> 00:04:52,560
Siempre representan al receptor
del mensaje

84
00:04:52,880 --> 00:04:54,240
Entonces, vimos este ejemplo

85
00:04:54,560 --> 00:04:58,440
con un nuevo foo y B nuevo foo.

86
00:04:59,040 --> 00:05:01,520
Ahora enviaremos el mensaje "barra".

87
00:05:02,480 --> 00:05:05,000
La barra se envía a una instancia.

88
00:05:05,560 --> 00:05:08,520
La barra se encuentra aquí y se ejecuta.

89
00:05:09,360 --> 00:05:12,960
y enviamos el mensaje foo
objetar a uno mismo

90
00:05:13,240 --> 00:05:15,600
"Ser" es este objeto,

91
00:05:16,800 --> 00:05:17,760
Una nueva

92
00:05:18,800 --> 00:05:21,960
Entonces buscamos este objeto
para un método "foo".

93
00:05:22,560 --> 00:05:24,920
Buscamos en la clase el método.

94
00:05:25,480 --> 00:05:28,160
Lo encontramos, lo ejecutamos y regresamos 10.

95
00:05:30,400 --> 00:05:33,560
El otro caso es exactamente idéntico.

96
00:05:33,760 --> 00:05:37,480
Pero presta atención, porque muchos
programadores de objetos principiantes

97
00:05:37,640 --> 00:05:38,760
se equivoca

98
00:05:39,280 --> 00:05:41,520
Pero el algoritmo es idéntico.

99
00:05:42,560 --> 00:05:45,920
Enviamos "barra" a este objeto.

100
00:05:46,200 --> 00:05:47,600
barra no se encuentra aquí.

101
00:05:47,760 --> 00:05:51,120
Se encuentra aquí.
Entonces esta es la barra que se ejecuta.

102
00:05:51,840 --> 00:05:55,520
En ese momento, el mensaje "foo"
se envía a uno mismo, que es ...

103
00:05:56,840 --> 00:05:58,520
aB, por lo tanto B nuevo.

104
00:06:00,360 --> 00:06:01,880
Enviamos el mensaje foo,

105
00:06:02,040 --> 00:06:05,640
por lo que el algoritmo busca el método
en la clase de objeto.

106
00:06:06,280 --> 00:06:07,480
Lo encuentra.

107
00:06:07,920 --> 00:06:09,160
50 se devuelve.

108
00:06:09,720 --> 00:06:12,200
Así es como se desarrolla el algoritmo.

109
00:06:12,480 --> 00:06:16,400
Mira cada paso en el proceso.
Es lo que acabo de decirte.

110
00:06:18,040 --> 00:06:20,680
Este ejemplo también es idéntico.

111
00:06:21,080 --> 00:06:22,280
a la anterior.

112
00:06:23,480 --> 00:06:26,200
La clase B, aquí, ahora está vacía.

113
00:06:27,360 --> 00:06:31,120
Se define una nueva clase, C
con el método foo return de 50.

114
00:06:31,440 --> 00:06:34,760
Pasas por el proceso de algoritmo
Acabo de presentar

115
00:06:34,920 --> 00:06:38,360
Aquí obtendrás 10.

116
00:06:38,760 --> 00:06:41,760
Este es el foo que se ejecuta,
en el final.

117
00:06:42,120 --> 00:06:43,520
Aquí tienes 50.

118
00:06:45,160 --> 00:06:45,960
Para concluir:

119
00:06:46,520 --> 00:06:50,880
"Sí mismo", como "esto" en Java,
siempre representa al receptor.

120
00:06:51,560 --> 00:06:54,200
El envío de mensajes siempre implica
dos pasos.

121
00:06:54,680 --> 00:06:58,360
Primero, el algoritmo de búsqueda se ve
para una coincidencia entre el método

122
00:06:59,800 --> 00:07:01,480
y el mensaje enviado.

123
00:07:01,680 --> 00:07:05,160
Segundo paso:el método encontrado
se ejecuta en el receptor.

124
00:07:05,800 --> 00:07:09,800
El algoritmo de búsqueda viaja hacia arriba
de la clase del receptor.

125
00:07:10,200 --> 00:07:12,840
El objetivo de la búsqueda de algoritmos

126
00:07:13,080 --> 00:07:17,520
es encontrar un método que coincida
el mensaje enviado a un receptor