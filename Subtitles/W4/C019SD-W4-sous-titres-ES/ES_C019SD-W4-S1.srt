1
00:00:07,560 --> 00:00:08,600
Hola a todos.

2
00:00:09,120 --> 00:00:12,720
Bienvenido a la secuencia 1 de la semana 4.

3
00:00:13,200 --> 00:00:17,960
Esta semana cubriremos
Conceptos básicos de herencia Pharo,

4
00:00:18,440 --> 00:00:21,840
y búsqueda
y mecanismos de desarrollo web.

5
00:00:22,480 --> 00:00:24,280
En la primera secuencia,

6
00:00:24,840 --> 00:00:29,120
presentaremos los conceptos básicos de la herencia.

7
00:00:29,440 --> 00:00:32,360
Estos conceptos son bastante similares.

8
00:00:32,520 --> 00:00:35,360
a herencia
En otros idiomas con clases,

9
00:00:35,520 --> 00:00:36,840
como Java

10
00:00:37,120 --> 00:00:40,560
Incluso si está familiarizado
Con estos conceptos básicos, por favor mira.

11
00:00:40,720 --> 00:00:42,840
Presentaremos un poco de vocabulario,

12
00:00:44,040 --> 00:00:47,680
y una representación gráfica
volverás a ver

13
00:00:48,120 --> 00:00:50,720
durante el resto del curso.

14
00:00:51,200 --> 00:00:54,280
Esta secuencia cubrirá
que herencia es,

15
00:00:54,480 --> 00:00:55,800
y cómo usarlo.

dieciséis
00:00:56,120 --> 00:00:59,040
Dos clases están representadas
a la derecha:

17
00:00:59,200 --> 00:01:02,840
la clase Rectangle,
con su nombre, en primer lugar,

18
00:01:03,880 --> 00:01:05,280
sus variables de instancia,

19
00:01:06,120 --> 00:01:07,160
y sus métodos.

20
00:01:07,560 --> 00:01:11,800
Debajo, ves lo mismo.
El nombre de la clase, ColorRectangle,

21
00:01:12,480 --> 00:01:15,360
sus variables de instancia y sus métodos.

22
00:01:16,800 --> 00:01:22,160
La flecha vertical aquí, con
su punto representado como un triángulo en blanco,

23
00:01:22,320 --> 00:01:25,200
indica una relación de herencia.

24
00:01:25,360 --> 00:01:29,720
La subclase ColorRectangle
hereda de la clase Rectangle.

25
00:01:29,880 --> 00:01:33,000
Generalmente, subclases como
ColoredRectangle

26
00:01:33,160 --> 00:01:37,320
refinar el comportamiento y el estado
de su superclase.

27
00:01:37,960 --> 00:01:42,400
Una subclase como ColorRectangle
puede agregar estado y comportamiento

28
00:01:42,760 --> 00:01:43,960
a su superclase

29
00:01:45,120 --> 00:01:49,080
Aquí, la clase ColoredRectangle
agrega estado

30
00:01:49,320 --> 00:01:53,840
en la forma de dos variables de instancia,
Color y color del borde.

31
00:01:55,240 --> 00:01:57,640
También agrega un método:color.

32
00:01:58,120 --> 00:02:01,160
En algún momento, podríamos decir
que cada clase

33
00:02:01,520 --> 00:02:04,280
hereda de la clase Object.

34
00:02:04,480 --> 00:02:06,160
Pero eso no es del todo cierto.

35
00:02:06,480 --> 00:02:10,240
Es cierto que cada clase
hereda de la clase ProtoObject.

36
00:02:10,520 --> 00:02:15,600
La superclase ProtoObject
Se usa para casos muy especiales.

37
00:02:15,960 --> 00:02:18,440
A los fines de este curso
en Pharo,

38
00:02:18,600 --> 00:02:21,600
diremos que todas las clases heredan
desde el objeto

39
00:02:21,760 --> 00:02:23,880
Eso será suficiente para nuestras necesidades.

40
00:02:24,120 --> 00:02:28,320
La clase ProtoObject está reservada.
solo para ciertos casos específicos.

41
00:02:28,800 --> 00:02:33,440
No es probable que lo necesites.
para aprender los conceptos básicos de Pharo.

42
00:02:34,360 --> 00:02:37,360
La herencia se comporta
de dos maneras diferentes,

43
00:02:37,520 --> 00:02:41,320
dependiendo de si el estado
o el comportamiento se está heredando.

44
00:02:41,840 --> 00:02:43,840
La herencia del estado es estática.

45
00:02:44,040 --> 00:02:47,400
Eso significa que
cuando crea la subclase,

46
00:02:47,760 --> 00:02:53,320
sabes exactamente qué
todas las variables de instancia son

47
00:02:54,280 --> 00:02:57,240
Sin embargo, la herencia del comportamiento
es dinamico

48
00:02:57,400 --> 00:03:00,840
Durante la ejecución del programa,
miras los métodos

49
00:03:01,000 --> 00:03:02,920
definido en sub y superclases.

50
00:03:03,480 --> 00:03:05,240
Con respecto a las variables de instancia,

51
00:03:05,560 --> 00:03:08,840
sucesión de herencia
durante la definición de clase.

52
00:03:09,240 --> 00:03:11,160
Cuando define la subclase,

53
00:03:12,800 --> 00:03:16,760
toma las variables de instancia
definido en la subclase -

54
00:03:16,920 --> 00:03:21,080
aquí, son de color y color del borde,

55
00:03:21,600 --> 00:03:26,080
y los fusionas
con todas las variables de instancia

56
00:03:26,240 --> 00:03:29,960
definido en la superclase
y la línea de las superclases,

57
00:03:30,120 --> 00:03:31,960
todo el camino hasta el objeto.

58
00:03:34,080 --> 00:03:37,000
Aquí, las variables de instancia
de ColorRectangle

59
00:03:37,160 --> 00:03:40,200
será con un color y color del borde.

60
00:03:41,400 --> 00:03:44,120
Por comportamiento,
Mecanismo de herencia cambia.

61
00:03:44,560 --> 00:03:47,120
Mire las siguientes secuencias

62
00:03:47,760 --> 00:03:50,280
para ver exactamente cómo se produce.

63
00:03:50,560 --> 00:03:51,680
Entonces, en general,

64
00:03:52,000 --> 00:03:54,720
La herencia de comportamiento ocurre en tiempo de ejecución.

sesenta y cinco
00:03:55,520 --> 00:03:59,040
En otras palabras, cuando envíes
un mensaje a un objeto,

66
00:04:00,040 --> 00:04:03,480
se busca una coincidencia de método
en la jerarquía de clases.

67
00:04:04,480 --> 00:04:07,440
Aquí, si envío un mensaje
a ColoredRectangle ...

68
00:04:08,200 --> 00:04:11,280
El mensaje "área", por ejemplo ...

69
00:04:11,880 --> 00:04:14,880
se buscará en la clase.

70
00:04:15,040 --> 00:04:18,920
El método se buscará
en la clase ColoredRectangle.

71
00:04:19,360 --> 00:04:22,080
Falta el método "área".

72
00:04:22,240 --> 00:04:24,640
Entonces subimos a la superclase.

73
00:04:25,160 --> 00:04:29,120
Encontramos el método de "área".
Se selecciona y se ejecuta.

74
00:04:30,040 --> 00:04:31,080
Ahora resumiré:

75
00:04:31,480 --> 00:04:35,280
Por herencia, los conceptos
de subclase y superclase

76
00:04:35,600 --> 00:04:38,600
habilita la subclase
para refinar el comportamiento

77
00:04:38,760 --> 00:04:41,280
de su superclase, y extiéndalo.

78
00:04:41,560 --> 00:04:45,600
La subclase también puede ampliar o agregar,

79
00:04:46,000 --> 00:04:47,960
Estado a su superclase.

80
00:04:48,400 --> 00:04:52,640
El modelo de herencia simple de Pharo
estipula una superclase por clase.

81
00:04:52,920 --> 00:04:56,440
El concepto de rasgos
le permite multiplicar la herencia,

82
00:04:56,600 --> 00:04:58,280
pero no lo cubriremos.

83
00:04:58,920 --> 00:05:01,120
El objeto está en la parte superior de la jerarquía.

84
00:05:01,320 --> 00:05:05,320
Entonces, es ProtoObject,
pero no entraremos en ese detalle.

85
00:05:05,800 --> 00:05:08,240
La herencia del estado es estática.

86
00:05:08,640 --> 00:05:11,960
Ocurre cuando se define la subclase.

87
00:05:12,200 --> 00:05:14,640
Pero la herencia del comportamiento es dinámica,

88
00:05:14,920 --> 00:05:16,280
pasando en tiempo de ejecución,

89
00:05:16,440 --> 00:05:19,000
cada vez que envíe un mensaje
a un objeto