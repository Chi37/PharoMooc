1
00:00:07,560 --> 00:00:08,600
Hola a todos. Bienvenidos
a la secuencia 1 

2
00:00:09,120 --> 00:00:12,720
de la semana 4. Esta semana 
cubriremos los conceptos básicos

3
00:00:13,200 --> 00:00:17,960
de la herencia en Pharo,
el mecanismo de LookUp (busqueda)

4
00:00:18,440 --> 00:00:21,840
y el de desarrollo Web.

5
00:00:22,480 --> 00:00:24,280
En la primera secuencia,
introduciremos los

6
00:00:24,840 --> 00:00:29,120
conceptos básicos de la herencia.

7
00:00:29,440 --> 00:00:32,360
Estos conceptos son bastante similares.

8
00:00:32,520 --> 00:00:35,360
a la herencia en otros idiomas
con clases, por ejemplo Java.

9
00:00:35,520 --> 00:00:36,840
Le aconsejo de mirarlo, incluso

10
00:00:37,120 --> 00:00:40,560
si está familiarizado con estos 
conceptos básicos, puesto que.

11
00:00:40,720 --> 00:00:42,840
introduciremos un poco de vocabulario,
así como una representación gráfica

12
00:00:44,040 --> 00:00:47,680
que volvera a utilizarse muy pronto

13
00:00:48,120 --> 00:00:50,720
durante el resto del curso.

14
00:00:51,200 --> 00:00:54,280
Esta secuencia enseñará
que és la herencia,

15
00:00:54,480 --> 00:00:55,800
y cómo utilizarla.

16
00:00:56,120 --> 00:00:59,040
A su derecha puede ver una
representacion de dos clases:

17
00:00:59,200 --> 00:01:02,840
la clase Rectangle,
con su nombre, en primer lugar,

18
00:01:03,880 --> 00:01:05,280
sus variables de instancia,
y sus métodos.

19
00:01:06,120 --> 00:01:07,160
Debajo, lo mismo.
El nombre de la clase,

20
00:01:07,560 --> 00:01:11,800
ColorRectangle, sus variables
de instancia y sus métodos.

21
00:01:12,480 --> 00:01:15,360
La flecha vertical aquí, podemos
ver que és un triangulo vacio

22
00:01:16,800 --> 00:01:22,160
como cabez de la flecha,
nos indica una relación de herencia.

23
00:01:22,320 --> 00:01:25,200
La subclase ColorRectangle
hereda de la clase Rectangle.

24
00:01:25,360 --> 00:01:29,720
Generalmente, subclases como
ColoredRectangle

25
00:01:29,880 --> 00:01:33,000
refinan el comportamiento y el estado
de su superclase.

26
00:01:33,160 --> 00:01:37,320
Una subclase como ColorRectangle
puede agregar 

27
00:01:37,960 --> 00:01:42,400
estado y comportamiento
a su superclase

28
00:01:42,760 --> 00:01:43,960
Aquí, la clase ColoredRectangle
agrega estado

29
00:01:45,120 --> 00:01:49,080
en la forma de dos variables
de instancia, color

30
00:01:49,320 --> 00:01:53,840
y borderedColor, también agrega
el metodo color.

31
00:01:55,240 --> 00:01:57,640
Podríamos decir que en un momento
u otro todas las clases

32
00:01:58,120 --> 00:02:01,160
heredan de la clase Object.

33
00:02:01,520 --> 00:02:04,280
De hecho eso no es del todo cierto.

34
00:02:04,480 --> 00:02:06,160
Es Seguro que todas las clases
heredan de la clase ProtoObject.

35
00:02:06,480 --> 00:02:10,240
La superclase ProtoObject


36
00:02:10,520 --> 00:02:15,600
se usa para casos muy especiales.

37
00:02:15,960 --> 00:02:18,440
A los fines de este curso
de Pharo, diremos que todas 

38
00:02:18,600 --> 00:02:21,600
las clases heredan de Object.
Eso será suficiente para

39
00:02:21,760 --> 00:02:23,880
comprender el conjunto de
mecanismos de Pharo.

40
00:02:24,120 --> 00:02:28,320
La clase ProtoObject está reservada.
solo para ciertos casos.

41
00:02:28,800 --> 00:02:33,440
muy específicos.
No es probable que lo necesite


42
00:02:34,360 --> 00:02:37,360
para aprender los conceptos
básicos de Pharo.

43
00:02:37,520 --> 00:02:41,320
La herencia se comporta
de manera diferente,

44
00:02:41,840 --> 00:02:43,840
dependiendo de si hereda el estado
o bien el comportamiento.

45
00:02:44,040 --> 00:02:47,400
La herencia del estado es estática.

46
00:02:47,760 --> 00:02:53,320
Esto significa que
cuando crea la subclase,

47
00:02:54,280 --> 00:02:57,240
conoce exactamente el conjunto

48
00:02:57,400 --> 00:03:00,840
de todas las variables
de instancia.

49
00:03:01,000 --> 00:03:02,920
Por el contrario para el
comportamiento, lo haremos 

50
00:03:03,480 --> 00:03:05,240
dinamicamente,
és decir que durante la ejecucion

51
00:03:05,560 --> 00:03:08,840
del programa miraremos
cuales son los metodos

52
00:03:09,240 --> 00:03:11,160
definidos en las subclases y
en las superclases.

53
00:03:12,800 --> 00:03:16,760
En cuanto a las variables de instancia, 
la herencia de las variables de instancia

54
00:03:16,920 --> 00:03:21,080
se produce en el momento de la
creacion de la subclase.

55
00:03:21,600 --> 00:03:26,080
Así en la creacion de la subclase,
tomaremos 

56
00:03:26,240 --> 00:03:29,960
las variables de instancia definidas
en la subclase, en este caso

57
00:03:30,120 --> 00:03:31,960
color y borderColor,
y haremos la

58
00:03:34,080 --> 00:03:37,000
union con todas las variables
de instancia definidas en

59
00:03:37,160 --> 00:03:40,200
la super clase, y en la super 
classe de la super clase

60
00:03:41,400 --> 00:03:44,120
y así hasta llegar
a la clase Object.

61
00:03:44,560 --> 00:03:47,120
Aqui las variables de instancia
de ColoredRectangle

62
00:03:47,760 --> 00:03:50,280
seran width height color
y borderColor

63
00:03:50,560 --> 00:03:51,680
Para el comportamiento el
mecanismo és completamente

64
00:03:52,000 --> 00:03:54,720
diferente, y las sequencias
que siguen presentaran 

65
00:03:55,520 --> 00:03:59,040
exactamente como funciona.
Globalmente,

66
00:04:00,040 --> 00:04:03,480
la herencia del comportamiento
se realiza durante la ejecución.

67
00:04:04,480 --> 00:04:07,440
Cuando enviamos un mensaje a Object,

68
00:04:08,200 --> 00:04:11,280
el metodo correspondiente se buscara
en la jerarquia de clases.

69
00:04:11,880 --> 00:04:14,880
Aqui, si envio un mensaje a
ColoredRectangle, el 

70
00:04:15,040 --> 00:04:18,920
mensaje Area por ejemplo,
lo buscaremos

71
00:04:19,360 --> 00:04:22,080
en su clase, buscaremos el metodo
correspondiente

72
00:04:22,240 --> 00:04:24,640
en la clase de A color rectangle.

73
00:04:25,160 --> 00:04:29,120
No encontramos el metodo Area
asi que remontamos

74
00:04:30,040 --> 00:04:31,080
en la super clase, 
buscamos el metodo Area,

75
00:04:31,480 --> 00:04:35,280
lo hemos encontramos, es este el
que sera seleccionado y ejecutado.

76
00:04:35,600 --> 00:04:38,600
Resumiendo.

77
00:04:38,760 --> 00:04:41,280
La herencia, esta nocion de 
subclase y de superclase

78
00:04:41,560 --> 00:04:45,600
permite a una subclase de
reafinar el 

79
00:04:46,000 --> 00:04:47,960
comportamiento de su superclase
y estenderlo.

80
00:04:48,400 --> 00:04:52,640
La subclase puede tanbien puede
estender, és decir agregar

81
00:04:52,920 --> 00:04:56,440
estado a su superclase.

82
00:04:56,600 --> 00:04:58,280
Pharo tiene un modelo de 
herencia simple, és de decir que 

83
00:04:58,920 --> 00:05:01,120
una clase tiene solo una
y unica superclase.

84
00:05:01,320 --> 00:05:05,320
És posible hacer algo parecido a la
herencia multiple

85
00:05:05,800 --> 00:05:08,240
con la nocion de trait, que 
no abordaremos aqui.

86
00:05:08,640 --> 00:05:11,960
En la cabeza de la jerarquia
encontramos Object y tambien la

87
00:05:12,200 --> 00:05:14,640
clase ProtoObject, que no entraremos
en detalles.

88
00:05:14,920 --> 00:05:16,280
La herencia del estado és estatica, és decir que se 

89
00:05:16,440 --> 00:05:19,000
realiza en el momento de la definicion
de la subclase, mientras que la herencia

90
00:05:13,280 --> 00:05:15,240
del comportamiento se realiza
durante la ejecución.

91
00:05:15,440 --> 00:05:18,030
del programa cada vez que
enviamos un mensaje a un objeto.



